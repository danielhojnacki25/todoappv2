@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start) {
    @if $value == flex-start {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        -ms-flex-pack: start;
    }
    @else if $value == flex-end {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        -ms-flex-pack: end;
    }
    @else if $value == space-between {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -ms-flex-pack: justify;
    }
    @else if $value == space-around {
        -ms-flex-pack: distribute;
    }
    @else {
        -webkit-box-pack: $value;
        -moz-box-pack: $value;
        -ms-flex-pack: $value;
    }

    -webkit-justify-content: $value;
    justify-content: $value;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) {
    @if $value == flex-start {
        -webkit-box-align: start;
        -moz-box-align: start;
        -ms-flex-align: start;
    }
    @else if $value == flex-end {
        -webkit-box-align: end;
        -moz-box-align: end;
        -ms-flex-align: end;
    }
    @else {
        -webkit-box-align: $value;
        -moz-box-align: $value;
        -ms-flex-align: $value;
    }

    -webkit-align-items: $value;
    align-items: $value;
}

@mixin transition($transition...) {
    -moz-transition: $transition;
    -o-transition: $transition;
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin transition-property($property...) {
    -moz-transition-property: $property;
    -o-transition-property: $property;
    -webkit-transition-property: $property;
    transition-property: $property;
}

@mixin transition-duration($duration...) {
    -moz-transition-duration: $duration;
    -o-transition-duration: $duration;
    -webkit-transition-duration: $duration;
    transition-duration: $duration;
}

@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function: $timing;
    -o-transition-timing-function: $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function: $timing;
}


@mixin smoothFadeInUp {
    animation-timing-function: cubic-bezier(0,1.18,.89,1);
    animation-name: fade-in-up;
    animation-duration: .4s;
}
@mixin smoothNormalFadeInUp {
    animation-timing-function: cubic-bezier(0,1.18,.89,1);
    animation-name: fade-in-up--normal;
    animation-duration: .4s;
}
@mixin smoothLoadingBarFadeInUp {
    animation-timing-function: cubic-bezier(0,1.18,.89,1);
    animation-name: fade-in-up;
    animation-duration: .8s;
}

@mixin box-shadow-primary {
    -webkit-box-shadow: 0px 0px 40px -12px rgba(66, 68, 90, .5);
    -moz-box-shadow: 0px 0px 40px -12px rgba(66, 68, 90, .5);
    box-shadow: 0px 0px 40px -12px rgba(66, 68, 90, .5);
}

@keyframes fade-in-up {
    0%{
        transform: translateY(550px) scale(0.6);
        opacity: 0;
    }

    50% {
        transform: translateY(-20px);
        opacity: 0.5;
    }

    100% {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
}

@keyframes fade-in-up--normal{
    0% {
        transform: translateY(550px);
        opacity: 0;
        filter: blur(2px);
    }

    50% {
        transform: translateY(0px);
        opacity: 0.5;
        filter: blur(1px);
    }

    100% {
        transform: translateY(0);
        opacity: 1;
        filter: blur(0);
    }
}
